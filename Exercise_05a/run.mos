echo(false);

setCommandLineOptions({"-d=rml,noevalfunc,gen", "+g=MetaModelica"});
msg := getErrorString(); if msg <> "" then print(msg); end if;
setEnvironmentVar("MODELICAUSERCFLAGS", "-g");
msg := getErrorString(); if msg <> "" then print(msg); end if;

cmd := "bison -d source/parser.y";
msg := system(cmd); if msg <> 0 then print(cmd + " fails\n"); end if;
cmd := "mv parser.tab.c parser.c";
msg := system(cmd); if msg <> 0 then print(cmd + " fails\n"); end if;
cmd := "mv parser.tab.h parser.h";
msg := system(cmd); if msg <> 0 then print(cmd + " fails\n"); end if;
cmd := "gcc -fPIC -I" + getInstallationDirectoryPath() + "/include/omc/c -I" + getInstallationDirectoryPath() + "/include/omc/c/meta -c -o parser.o parser.c";
msg := system(cmd); if msg <> 0 then print(cmd + " fails\n"); end if;

cmd := "flex -t -l source/lexer.l > lexer.c";
msg := system(cmd); if msg <> 0 then print(cmd + " fails\n"); end if;
cmd := "gcc -fPIC -I" + getInstallationDirectoryPath() + "/include/omc/c -I" + getInstallationDirectoryPath() + "/include/omc/c/meta -c -o lexer.o lexer.c";
msg := system(cmd); if msg <> 0 then print(cmd + " fails\n"); end if;

loadFile("source/AssignTwoType.mo");
msg := getErrorString(); if msg <> "" then print(msg); end if;
loadFile("source/Parse.mo");
msg := getErrorString(); if msg <> "" then print(msg); end if;
loadFile("source/Main.mo");
msg := getErrorString(); if msg <> "" then print(msg); end if;

reopenStandardStream(OpenModelica.Scripting.StandardStream.stdout, "output_main.txt");
msg := getErrorString(); if msg <> "" then print(msg); end if;
reopenStandardStream(OpenModelica.Scripting.StandardStream.stdin, "source/input.txt");
msg := getErrorString(); if msg <> "" then print(msg); end if;
Main.main({""});
msg := getErrorString(); if msg <> "" then print(msg); end if;
